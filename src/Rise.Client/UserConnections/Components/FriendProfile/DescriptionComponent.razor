
@using System.Linq
@using Rise.Client.Profile.Models
@using Rise.Shared.Users

<section class="relative z-10 flex flex-1 flex-col justify-center px-5 pb-16 pt-10 sm:px-8 sm:pb-20 md:flex-[0.95] md:px-14 md:py-20">
    <div class="mx-auto w-full max-w-2xl space-y-7">
        <article class="rounded-3xl border border-neutral-200/80 bg-white/95 p-6 shadow-xl shadow-emerald-500/10 backdrop-blur">
            <header class="flex items-baseline justify-between gap-4">
                <div>
                    <p class="text-xs font-semibold uppercase tracking-[0.2em] text-emerald-600">Over</p>
                    <h2 class="mt-1 text-xl font-semibold text-neutral-900 sm:text-2xl">@GetIntroTitle()</h2>
                </div>
            </header>

            @if (!string.IsNullOrWhiteSpace(Description))
            {
                <p class="mt-5 text-[15px] leading-relaxed text-neutral-700 sm:text-base">
                    @Description
                </p>
            }
            else
            {
                <p class="mt-5 text-[15px] leading-relaxed text-neutral-500 italic sm:text-base">
                    Deze vriend heeft nog geen beschrijving gedeeld.
                </p>
            }
        </article>

        <section class="rounded-3xl border border-neutral-200 bg-white/90 p-6 shadow-lg shadow-neutral-900/5 backdrop-blur">
            <header class="flex items-center justify-between gap-3 text-sm font-semibold text-neutral-700">
                <div class="flex items-center gap-3">
                    <span class="flex h-9 w-9 items-center justify-center rounded-full bg-neutral-100 text-neutral-500">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.6">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M12 11c1.38 0 2.5-1.12 2.5-2.5S13.38 6 12 6 9.5 7.12 9.5 8.5 10.62 11 12 11z" />
                            <path stroke-linecap="round" stroke-linejoin="round" d="M19 20a7 7 0 10-14 0" />
                        </svg>
                    </span>
                    <span>Hobby's</span>
                </div>
                <span class="text-xs font-medium text-neutral-500">@Hobbies.Count</span>
            </header>

            <div class="mt-4 flex flex-wrap gap-2">
                @if (Hobbies.Any())
                {
                    @foreach (var hobby in Hobbies)
                    {
                        <span class="inline-flex items-center gap-2 rounded-full border border-neutral-300 bg-white px-3 py-1 text-sm font-medium text-neutral-700 shadow-sm">
                            @if (!string.IsNullOrWhiteSpace(hobby.Emoji))
                            {
                                <span class="text-base">@hobby.Emoji</span>
                            }
                            <span>@hobby.Name</span>
                        </span>
                    }
                }
                else
                {
                    <span class="text-sm text-neutral-500">Nog geen hobby's gedeeld.</span>
                }
            </div>
        </section>

        <div class="grid gap-5 sm:grid-cols-2">
            <section class="rounded-3xl border border-emerald-100 bg-emerald-50/90 p-6 shadow-lg shadow-emerald-500/15">
                <header class="mb-3 flex items-center justify-between gap-2 text-sm font-semibold text-emerald-700">
                    <div class="flex items-center gap-2">
                        <span class="flex h-8 w-8 items-center justify-center rounded-full bg-emerald-100 text-emerald-600">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="currentColor" viewBox="0 0 256 256">
                                <path d="M234,80.12A24,24,0,0,0,216,72H160V56a40,40,0,0,0-40-40,8,8,0,0,0-7.16,4.42L75.06,96H32a16,16,0,0,0-16,16v88a16,16,0,0,0,16,16H204a24,24,0,0,0,23.82-21l12-96A24,24,0,0,0,234,80.12ZM32,112H72v88H32Z"></path>
                            </svg>
                        </span>
                        <span>Wat @GetPossessiveName() leuk vindt</span>
                    </div>
                    <span class="text-xs font-medium text-emerald-600">@Likes.Count</span>
                </header>

                <div class="flex flex-wrap gap-2">
                    @if (Likes.Any())
                    {
                        @foreach (var like in Likes)
                        {
                            <span class="inline-flex items-center gap-2 rounded-full border border-emerald-200 bg-white px-3 py-1 text-sm font-medium text-emerald-800 shadow-sm">
                                @if (!string.IsNullOrWhiteSpace(like.Emoji))
                                {
                                    <span class="text-base">@like.Emoji</span>
                                }
                                <span>@like.Text</span>
                            </span>
                        }
                    }
                    else
                    {
                        <span class="text-sm text-emerald-700/80">Nog geen favorieten gedeeld.</span>
                    }
                </div>
            </section>

            <section class="rounded-3xl border border-rose-100 bg-rose-50/90 p-6 shadow-lg shadow-rose-500/15">
                <header class="mb-3 flex items-center justify-between gap-2 text-sm font-semibold text-rose-600">
                    <div class="flex items-center gap-2">
                        <span class="flex h-8 w-8 items-center justify-center rounded-full bg-rose-100 text-rose-500">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="currentColor" viewBox="0 0 256 256">
                                <path d="M239.82,157l-12-96A24,24,0,0,0,204,40H32A16,16,0,0,0,16,56v88a16,16,0,0,0,16,16H75.06l37.78,75.58A8,8,0,0,0,120,240a40,40,0,0,0,40-40V184h56a24,24,0,0,0,23.82-27ZM72,144H32V56H72Z"></path>
                            </svg>
                        </span>
                        <span>Wat @GetPossessiveName() minder leuk vindt</span>
                    </div>
                    <span class="text-xs font-medium text-rose-500">@Dislikes.Count</span>
                </header>

                <div class="flex flex-wrap gap-2">
                    @if (Dislikes.Any())
                    {
                        @foreach (var dislike in Dislikes)
                        {
                            <span class="inline-flex items-center gap-2 rounded-full border border-rose-200 bg-white px-3 py-1 text-sm font-medium text-rose-700 shadow-sm">
                                @if (!string.IsNullOrWhiteSpace(dislike.Emoji))
                                {
                                    <span class="text-base">@dislike.Emoji</span>
                                }
                                <span>@dislike.Text</span>
                            </span>
                        }
                    }
                    else
                    {
                        <span class="text-sm text-rose-600/80">Nog geen minder leuke dingen gedeeld.</span>
                    }
                </div>
            </section>
        </div>

        <div>
            <button type="button"
                    class="inline-flex w-full items-center justify-center gap-3 rounded-2xl border border-transparent bg-emerald-500 px-5 py-3 text-base font-semibold text-white shadow-lg shadow-emerald-500/25 transition focus:outline-none focus:ring-4 focus:ring-emerald-200 active:translate-y-[1px]"
                    aria-label="@GetButtonAriaLabel()">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.8">
                    @if (PlusKnop)
                    {
                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 4v16m8-8H4" />
                    }
                    else
                    {
                        <path stroke-linecap="round" stroke-linejoin="round" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7" />
                    }
                </svg>
                <span>@GetButtonText()</span>
            </button>
        </div>
    </div>
</section>


@code {
    [Parameter] public string Description { get; set; } = "Lief, eerlijk en altijd mezelf ðŸ’› Heb een mentale beperking, maar een groot hart en een brede glimlach ðŸ™‚";
    [Parameter] public bool PlusKnop { get; set; }
    [Parameter] public string Name { get; set; } = string.Empty;
    [Parameter] public IReadOnlyList<ProfileHobbyModel> Hobbies { get; set; } = Array.Empty<ProfileHobbyModel>();
    [Parameter] public IReadOnlyList<SentimentDto.Get> Likes { get; set; } = Array.Empty<SentimentDto.Get>();
    [Parameter] public IReadOnlyList<SentimentDto.Get> Dislikes { get; set; } = Array.Empty<SentimentDto.Get>();

    private string GetIntroTitle() => string.IsNullOrWhiteSpace(Name) ? "Dit profiel" : Name;
    private string GetPossessiveName() => string.IsNullOrWhiteSpace(Name) ? "deze vriend" : Name;
    private string GetButtonText() => PlusKnop ? "Vriend toevoegen" : "Bericht sturen";
    private string GetButtonAriaLabel() => PlusKnop
        ? "Vriend toevoegen"
        : (string.IsNullOrWhiteSpace(Name) ? "Bericht sturen" : $"Bericht sturen naar {Name}");
}