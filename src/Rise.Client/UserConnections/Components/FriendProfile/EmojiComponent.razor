@using System.Linq
@using Rise.Shared.Users

<section class="relative z-10 rounded-3xl bg-white/80 p-6 shadow-lg backdrop-blur sm:p-8">
    <div class="flex items-center justify-between">
        <h2 class="text-lg font-semibold text-neutral-800 sm:text-xl">Hobby's</h2>
        <span class="text-sm text-neutral-500">@DisplayHobbyCount geselecteerd</span>
    </div>

    <div class="mt-6 grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3">
        @foreach (var hobby in DisplayHobbies)
        {
            <div class="group flex h-full flex-col justify-between rounded-2xl border border-neutral-200/80 bg-white p-4 shadow-sm transition hover:-translate-y-0.5 hover:shadow-md">
                <div class="flex items-center gap-3">
                    <span class="flex h-12 w-12 items-center justify-center rounded-2xl bg-emerald-50 text-2xl">@hobby.Emoji</span>
                    <span class="text-base font-medium text-neutral-800">@hobby.Name</span>
                </div>
            </div>
        }
    </div>
</section>

@code {
    [Parameter] public IEnumerable<HobbyDto.Get> Hobbies { get; set; } = Enumerable.Empty<HobbyDto.Get>();

    [Parameter] public string Hobby1 { get; set; } = "🏀";
    [Parameter] public string Hobby2 { get; set; } = "🏈";
    [Parameter] public string Hobby3 { get; set; } = "⚽";

    private IEnumerable<(string Emoji, string Name)> DefaultEmojiCards => new List<(string Emoji, string Name)>
    {
        (Hobby1, "Basketbal"),
        (Hobby2, "Rugby"),
        (Hobby3, "Voetbal"),
    };

    private int DisplayHobbyCount => DisplayHobbies.Count;

    private IReadOnlyList<(string Emoji, string Name)> DisplayHobbies
    {
        get
        {
            if (Hobbies?.Any() == true)
            {
                return Hobbies
                    .Select(h => (h.Emoji, h.Name))
                    .Distinct()
                    .ToList();
            }

            return DefaultEmojiCards.ToList();
        }
    }
}
