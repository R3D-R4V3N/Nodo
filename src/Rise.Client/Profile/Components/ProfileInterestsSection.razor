@using System
@using System.Linq
@using Rise.Client.Profile.Models

<section class="mt-6">
    <h3 class="mb-2 text-sm font-medium text-neutral-700">Interesses &amp; hobby's</h3>
    <div class="space-y-4">
        <div class="rounded-2xl border border-emerald-100 bg-emerald-50 p-4">
            <div class="mb-3 flex items-center justify-between gap-2 text-sm font-semibold text-emerald-700">
                <div class="flex items-center gap-2">
                    <span class="flex h-7 w-7 items-center justify-center rounded-full bg-emerald-100 text-emerald-600">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-4 w-4">
                            <path fill-rule="evenodd" d="M7.5 4.5A3 3 0 0 1 10.5 1.5h.284a2.25 2.25 0 0 1 2.12 1.5l.154.462a4.5 4.5 0 0 0 2.58 2.724l.341.136A3 3 0 0 1 17.872 8.7l.628 1.257A1.5 1.5 0 0 1 18 11.442L14.95 15.1a3 3 0 0 1-2.25 1.066H10.5A1.5 1.5 0 0 0 9 17.666v.834A1.5 1.5 0 0 1 7.5 20H6a3 3 0 0 1-3-3v-6A3 3 0 0 1 6 8h1.172a3 3 0 0 0 2.121-.879L7.5 4.5Z" clip-rule="evenodd" />
                        </svg>
                    </span>
                    <span>Wat ik leuk vind</span>
                </div>
                @if (IsEditing)
                {
                    <span class="text-xs font-medium text-emerald-700">@Likes.Count/@MaxLikes</span>
                }
            </div>
            <div class="min-h-[36px] flex flex-wrap gap-2">
                @if (Likes.Any())
                {
                    @foreach (var chip in Likes)
                    {
                        <span class="inline-flex items-center gap-2 rounded-full border border-emerald-200 bg-white px-3 py-1 text-sm text-emerald-800 shadow-sm">
                            <span class="font-medium">@chip.Label</span>
                            @if (IsEditing)
                            {
                                <button type="button" class="ml-1 rounded-full p-0.5 text-emerald-600 hover:bg-emerald-100" @onclick="() => HandleRemoveLike(chip.Id)" aria-label='@($"Verwijder {chip.Label}")'>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                    </svg>
                                </button>
                            }
                        </span>
                    }
                }
                else if (IsEditing)
                {
                    <span class="text-sm text-emerald-700/80">Kies dingen die je graag hebt.</span>
                }
                else
                {
                    <span class="text-sm text-emerald-700/80">Er zijn nog geen favorieten ingesteld.</span>
                }
            </div>
            @if (IsEditing)
            {
                <button type="button" class="mt-3 w-full rounded-xl bg-[#127646] px-4 py-3 text-sm font-medium text-white shadow hover:bg-[#0f663c] active:scale-[0.99]" @onclick="HandleManageLikes">
                    Kies wat ik leuk vind
                </button>
            }
        </div>

        <div class="rounded-2xl border border-rose-100 bg-rose-50 p-4">
            <div class="mb-3 flex items-center justify-between gap-2 text-sm font-semibold text-rose-600">
                <div class="flex items-center gap-2">
                    <span class="flex h-7 w-7 items-center justify-center rounded-full bg-rose-100 text-rose-500">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-4 w-4">
                            <path fill-rule="evenodd" d="M16.5 19.5A3 3 0 0 1 13.5 22.5h-.284a2.25 2.25 0 0 1-2.12-1.5l-.154-.462a4.5 4.5 0 0 0-2.58-2.724l-.341-.136A3 3 0 0 1 6.128 15.3l-.628-1.257A1.5 1.5 0 0 1 6 12.558L9.05 8.9a3 3 0 0 1 2.25-1.066h2.2A1.5 1.5 0 0 0 15 6.334V5.5A1.5 1.5 0 0 1 16.5 4H18a3 3 0 0 1 3 3v6a3 3 0 0 1-3 3h-1.172a3 3 0 0 0-2.121.879l1.793 2.621Z" clip-rule="evenodd" />
                        </svg>
                    </span>
                    <span>Wat ik minder leuk vind</span>
                </div>
                @if (IsEditing)
                {
                    <span class="text-xs font-medium text-rose-600">@Dislikes.Count/@MaxDislikes</span>
                }
            </div>
            <div class="min-h-[36px] flex flex-wrap gap-2">
                @if (Dislikes.Any())
                {
                    @foreach (var chip in Dislikes)
                    {
                        <span class="inline-flex items-center gap-2 rounded-full border border-rose-200 bg-white px-3 py-1 text-sm text-rose-700 shadow-sm">
                            <span class="font-medium">@chip.Label</span>
                            @if (IsEditing)
                            {
                                <button type="button" class="ml-1 rounded-full p-0.5 text-rose-500 hover:bg-rose-100" @onclick="() => HandleRemoveDislike(chip.Id)" aria-label='@($"Verwijder {chip.Label}")'>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                    </svg>
                                </button>
                            }
                        </span>
                    }
                }
                else if (IsEditing)
                {
                    <span class="text-sm text-rose-600/80">Kies wat je liever vermijdt.</span>
                }
                else
                {
                    <span class="text-sm text-rose-600/80">Er zijn nog geen dingen die je minder leuk vindt.</span>
                }
            </div>
            @if (IsEditing)
            {
                <button type="button" class="mt-3 w-full rounded-xl bg-rose-500 px-4 py-3 text-sm font-medium text-white shadow hover:bg-rose-600 active:scale-[0.99]" @onclick="HandleManageDislikes">
                    Kies wat ik minder leuk vind
                </button>
            }
        </div>

        <div class="rounded-2xl border border-neutral-200 bg-white p-4">
            <div class="mb-3 flex items-center justify-between gap-2 text-sm font-semibold text-neutral-700">
                <div class="flex items-center gap-2">
                    <span class="flex h-7 w-7 items-center justify-center rounded-full bg-neutral-100 text-neutral-500">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-5 w-5">
                            <path d="M7.5 3A2.5 2.5 0 0 1 10 5.5V7h1.5A2.5 2.5 0 0 1 14 9.5V11h1.5a2.5 2.5 0 1 1 0 5H14v1.5a2.5 2.5 0 0 1-5 0V16H7.5A2.5 2.5 0 0 1 5 13.5V12H3.5a2.5 2.5 0 0 1 0-5H5V5.5A2.5 2.5 0 0 1 7.5 3Z" />
                        </svg>
                    </span>
                    <span>Mijn hobby's</span>
                </div>
                @if (IsEditing)
                {
                    <span class="text-xs font-medium text-neutral-500">@Hobbies.Count/@MaxHobbies</span>
                }
            </div>
            <div class="min-h-[36px] flex flex-wrap gap-2">
                @if (Hobbies.Any())
                {
                    @foreach (var hobby in Hobbies)
                    {
                        <span class="inline-flex items-center gap-2 rounded-full border border-neutral-300 bg-white px-3 py-1 text-sm text-neutral-700 shadow-sm">
                            @if (!string.IsNullOrWhiteSpace(hobby.Emoji))
                            {
                                <span class="text-base">@hobby.Emoji</span>
                            }
                            <span class="font-medium">@hobby.Name</span>
                            @if (IsEditing)
                            {
                                <button type="button" class="ml-1 rounded-full p-0.5 text-neutral-500 hover:bg-neutral-100" @onclick="() => HandleRemoveHobby(hobby.Id)" aria-label='@($"Verwijder {hobby.Name}")'>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                    </svg>
                                </button>
                            }
                        </span>
                    }
                }
                else if (IsEditing)
                {
                    <span class="text-sm text-neutral-500">Kies hobby's die bij je passen.</span>
                }
                else
                {
                    <span class="text-sm text-neutral-500">Nog geen hobby's geselecteerd.</span>
                }
            </div>
            @if (IsEditing)
            {
                <button type="button" class="mt-3 w-full rounded-xl bg-[#127646] px-4 py-3 text-sm font-medium text-white shadow hover:bg-[#0f663c] active:scale-[0.99]" @onclick="HandleManageHobbies">
                    Beheer hobby's <span class="opacity-90">(@Hobbies.Count/@MaxHobbies)</span>
                </button>
            }
        </div>
    </div>
</section>

@code {
    [Parameter] public IReadOnlyList<PreferenceChip> Likes { get; set; } = Array.Empty<PreferenceChip>();
    [Parameter] public IReadOnlyList<PreferenceChip> Dislikes { get; set; } = Array.Empty<PreferenceChip>();
    [Parameter] public IReadOnlyList<ProfileHobbyModel> Hobbies { get; set; } = Array.Empty<ProfileHobbyModel>();
    [Parameter] public bool IsEditing { get; set; }
    [Parameter] public int MaxLikes { get; set; }
    [Parameter] public int MaxDislikes { get; set; }
    [Parameter] public int MaxHobbies { get; set; }
    [Parameter] public EventCallback OnManageLikes { get; set; }
    [Parameter] public EventCallback OnManageDislikes { get; set; }
    [Parameter] public EventCallback OnManageHobbies { get; set; }
    [Parameter] public EventCallback<string> OnRemoveLike { get; set; }
    [Parameter] public EventCallback<string> OnRemoveDislike { get; set; }
    [Parameter] public EventCallback<string> OnRemoveHobby { get; set; }

    private Task HandleManageLikes() => OnManageLikes.InvokeAsync();
    private Task HandleManageDislikes() => OnManageDislikes.InvokeAsync();
    private Task HandleManageHobbies() => OnManageHobbies.InvokeAsync();
    private Task HandleRemoveLike(string id) => OnRemoveLike.InvokeAsync(id);
    private Task HandleRemoveDislike(string id) => OnRemoveDislike.InvokeAsync(id);
    private Task HandleRemoveHobby(string id) => OnRemoveHobby.InvokeAsync(id);
}
