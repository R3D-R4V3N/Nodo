@using Rise.Client.Profile.Models

<div class="min-h-screen bg-neutral-50 text-neutral-900 antialiased overflow-x-hidden">
    <ProfileHeader
        Title="Profiel"
        IsEditing="@IsEditing"
        IsBusy="@(!_isInitialized || _isSaving)"
        OnBack="NavigateBack"
        OnEdit="BeginEdit"
        OnCancel="CancelEdit"
        OnSave="SaveEdit" />

    @if (!_isInitialized)
    {
        <div class="mx-auto max-w-screen-sm px-4 pb-24 pt-6">
            <div class="rounded-2xl border border-dashed border-neutral-300 bg-white px-6 py-8 text-center text-sm text-neutral-600">
                Profiel wordt geladenâ€¦
            </div>
        </div>
    }
    else if (!string.IsNullOrEmpty(_errorMessage))
    {
        <div class="mx-auto max-w-screen-sm px-4 pb-24 pt-6">
            <div class="rounded-2xl border border-red-200 bg-red-50 px-6 py-4 text-center text-sm text-red-700">
                @_errorMessage
            </div>
        </div>
    }
    else
    {
        <main class="mx-auto max-w-screen-sm px-4 pb-24 pt-4">
            <section class="text-center">
                <ProfileAvatar
                    AvatarUrl="@_draft.AvatarUrl"
                    DisplayName="@DisplayName"
                    MemberSince="@_model.MemberSinceDisplay"
                    OnAvatarChanged="OnAvatarChanged" />
            </section>

            <ProfilePersonalInfo
                @bind-FullName="_draft.FullName"
                @bind-Email="_draft.Email"
                @bind-Bio="_draft.Bio"
                @bind-Gender="_draft.Gender"
                IsEditing="@IsEditing" />

            <ProfileInterestsSection
                SelectedInterests="@SelectedInterests"
                MaxSelection="@MaxInterests"
                OnManage="OpenInterestsPicker"
                OnRemove="RemoveInterest" />
        </main>

        <ProfileInterestsPicker
            Interests="@InterestOptions"
            Selection="@_pickerSelection"
            SearchText="@_pickerSearch"
            MaxSelection="@MaxInterests"
            IsOpen="@IsPickerOpen"
            OnToggle="TogglePickerSelection"
            OnClear="ClearPickerSelection"
            OnConfirm="ConfirmPickerSelection"
            OnClose="ClosePicker"
            SearchTextChanged="UpdatePickerSearch" />
    }

    <ProfileToast Message="@_toastMessage" Visible="@_isToastVisible" />
</div>

@code {
}
