@using Microsoft.AspNetCore.Authorization
@using Rise.Client.Profile.Models
@attribute [Authorize]

<div class="min-h-screen bg-neutral-50 text-neutral-900 antialiased overflow-x-hidden">
    <ProfileHeader
        Title="Profiel"
        IsEditing="@IsEditing"
        CanEdit="@(!IsLoading && !HasError)"
        OnBack="NavigateBack"
        OnEdit="BeginEdit"
        OnCancel="CancelEdit"
        OnSave="SaveEdit" />

    @if (IsLoading)
    {
        <main class="mx-auto max-w-screen-sm px-4 pb-24 pt-6">
            <div class="rounded-2xl border border-dashed border-neutral-300 bg-white/60 px-4 py-8 text-center text-sm text-neutral-600">
                Profiel wordt geladen...
            </div>
        </main>
    }
    else if (HasError)
    {
        <main class="mx-auto max-w-screen-sm px-4 pb-24 pt-6">
            <div class="rounded-2xl border border-rose-200 bg-rose-50 px-4 py-6 text-center text-sm text-rose-700">
                @ErrorMessage
            </div>
        </main>
    }
    else
    {
        <main class="mx-auto max-w-screen-sm px-4 pb-24 pt-4">
            <section class="text-center">
                <ProfileAvatar
                    AvatarUrl="@_draft.AvatarUrl"
                    DisplayName="@DisplayName"
                    MemberSince="@_model.MemberSince"
                    OnAvatarChanged="OnAvatarChanged" />
            </section>

            <ProfilePersonalInfo
                @bind-Name="_draft.Name"
                @bind-Email="_draft.Email"
                @bind-Bio="_draft.Bio"
                @bind-Gender="_draft.Gender"
                IsEditing="@IsEditing" />

            <ProfileInterestsSection
                Likes="@LikeChips"
                Dislikes="@DislikeChips"
                Hobbies="@Hobbies"
                IsEditing="@IsEditing"
                MaxLikes="@MaxLikes"
                MaxDislikes="@MaxDislikes"
                MaxHobbies="@MaxHobbies"
                OnManageLikes="OpenLikesPicker"
                OnManageDislikes="OpenDislikesPicker"
                OnManageHobbies="OpenHobbiesPicker"
                OnRemoveLike="RemoveLike"
                OnRemoveDislike="RemoveDislike"
                OnRemoveHobby="RemoveHobby" />

            <ProfileChatSuggestionsSection
                Suggestions="@ChatSuggestions"
                IsEditing="@IsEditing"
                MaxSuggestions="@MaxChatSuggestions"
                OnManageSuggestions="OpenChatSuggestionPicker"
                OnRemoveSuggestion="RemoveChatSuggestion" />
        </main>
    }

    <ProfileInterestsPicker
        Interests="@HobbyOptions"
        Selection="@PickerSelection"
        SearchText="@PickerSearch"
        MaxSelection="@MaxHobbies"
        IsOpen="@IsPickerOpen"
        OnToggle="TogglePickerSelection"
        OnClear="ClearPickerSelection"
        OnConfirm="ConfirmPickerSelection"
        OnClose="ClosePicker"
        SearchTextChanged="UpdatePickerSearch" />

    <ProfilePreferencesPicker
        Title="@PreferencePickerTitle"
        SearchPlaceholder="@PreferencePickerPlaceholder"
        Options="@PreferenceOptions"
        Selection="@PreferencePickerSelection"
        SearchText="@PreferencePickerSearch"
        MaxSelection="@MaxPreferences"
        IsOpen="@IsPreferencePickerOpen"
        UseDislikeTheme="@IsDislikePicker"
        OnToggle="TogglePreferencePickerSelection"
        OnClear="ClearPreferencePickerSelection"
        OnConfirm="ConfirmPreferencePickerSelection"
        OnClose="ClosePreferencePicker"
        SearchTextChanged="UpdatePreferencePickerSearch" />

    <ProfileChatSuggestionsPicker
        Options="@ChatSuggestionOptions"
        Selection="@ChatSuggestionPickerSelection"
        SearchText="@ChatSuggestionSearch"
        MaxSelection="@MaxChatSuggestions"
        IsOpen="@IsChatSuggestionPickerOpen"
        OnToggle="ToggleChatSuggestionSelection"
        OnClear="ClearChatSuggestionSelection"
        OnConfirm="ConfirmChatSuggestionSelection"
        OnClose="CloseChatSuggestionPicker"
        SearchTextChanged="UpdateChatSuggestionSearch" />

    <ProfileToast Message="@_toastMessage" Visible="@_isToastVisible" />
</div>

@code {
}
